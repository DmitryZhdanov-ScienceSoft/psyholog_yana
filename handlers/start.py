import asyncio

from aiogram import Router, Bot, F
from aiogram.filters import CommandStart
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext

from config import BOT_NAMING
from keyboards.inline import MyCallback, one_button
from database import Database


db = Database()


async def func_start(message: Message, state: FSMContext, if_back: bool = False):
    user_id = message.chat.id
    name = message.from_user.first_name

    info = db.select_all_users()

    if str(user_id) not in info:
        db.add_user(user_id=user_id, name=name)

    if if_back:
        await message.answer('''*üè† –í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é*

–Ø –Ø–Ω–∞ ‚Äì —Ç–≤–æ–π –Ω–æ–≤—ã–π –æ–Ω–ª–∞–π–Ω –ø—Å–∏—Ö–æ–ª–æ–≥ –≤ –¢–µ–ª–µ–≥—Ä–∞–º.             

–°–æ –º–Ω–æ–π –º–æ–∂–Ω–æ –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å –æ —á–µ–º —É–≥–æ–¥–Ω–æ. –Ø –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å —Ç–µ–±—è –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –∏ –ø–æ–º–æ–≥—É —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å –º—ã—Å–ª—è–º–∏ –∏ —á—É–≤—Å—Ç–≤–∞–º–∏. –ú—ã –º–æ–∂–µ–º –æ–±–º–µ–Ω–∏–≤–∞—Ç—å—Å—è –∫–∞–∫ —Ç–µ–∫—Å—Ç–æ–º, —Ç–∞–∫ –∏ –≥–æ–ª–æ—Å–æ–≤—ã–º–∏ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è —Å—É—Ç–æ–∫. 

üë©‚Äç‚öïÔ∏è *–Ø —Å—Ç–∞—Ä–∞—é—Å—å –∑–≤—É—á–∞—Ç—å –∫–∞–∫ –Ω–∞—Å—Ç–æ—è—â–∏–π –ø—Å–∏—Ö–æ–ª–æ–≥*, –Ω–æ –≤—Å—ë –∂–µ —è —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç, *–æ–∫–∞–∑—ã–≤–∞—é—â–∏–π –±–∞–∑–æ–≤—É—é –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É*. –ï—Å–ª–∏ —É —Ç–µ–±—è –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–ª–æ–∂–Ω–∞—è —Å–∏—Ç—É–∞—Ü–∏—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—â–∞–π—Å—è –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º.
''',
                             reply_markup=one_button('–û —á—ë–º –º–æ–∂–Ω–æ –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å?', 'start_2'))
    else:
        text = f'''
üåü *–ü—Ä–∏–≤–µ—Ç, {name}!*      

–Ø –Ø–Ω–∞ ‚Äì —Ç–≤–æ–π –Ω–æ–≤—ã–π –æ–Ω–ª–∞–π–Ω –ø—Å–∏—Ö–æ–ª–æ–≥ –≤ –¢–µ–ª–µ–≥—Ä–∞–º.             

–°–æ –º–Ω–æ–π –º–æ–∂–Ω–æ –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å –æ —á–µ–º —É–≥–æ–¥–Ω–æ. –Ø –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å —Ç–µ–±—è –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –∏ –ø–æ–º–æ–≥—É —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å –º—ã—Å–ª—è–º–∏ –∏ —á—É–≤—Å—Ç–≤–∞–º–∏. –ú—ã –º–æ–∂–µ–º –æ–±–º–µ–Ω–∏–≤–∞—Ç—å—Å—è –∫–∞–∫ —Ç–µ–∫—Å—Ç–æ–º, —Ç–∞–∫ –∏ –≥–æ–ª–æ—Å–æ–≤—ã–º–∏ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è —Å—É—Ç–æ–∫. 

üë©‚Äç‚öïÔ∏è *–Ø —Å—Ç–∞—Ä–∞—é—Å—å –∑–≤—É—á–∞—Ç—å –∫–∞–∫ –Ω–∞—Å—Ç–æ—è—â–∏–π –ø—Å–∏—Ö–æ–ª–æ–≥*, –Ω–æ –≤—Å—ë –∂–µ —è —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç, *–æ–∫–∞–∑—ã–≤–∞—é—â–∏–π –±–∞–∑–æ–≤—É—é –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É*. –ï—Å–ª–∏ —É —Ç–µ–±—è –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–ª–æ–∂–Ω–∞—è —Å–∏—Ç—É–∞—Ü–∏—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—â–∞–π—Å—è –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º.
'''
        await message.answer(text=text, reply_markup=one_button('–û —á—ë–º –º–æ–∂–Ω–æ –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å?', 'start_2'))


async def back_to_start(call: CallbackQuery, bot: Bot, state: FSMContext):
    await state.clear()
    await func_start(message=call.message, if_back=True, state=state)


def router(router: Router):
    router.message.register(func_start, CommandStart())
    router.callback_query.register(back_to_start, MyCallback.filter(F.call == 'back_to_start'))
